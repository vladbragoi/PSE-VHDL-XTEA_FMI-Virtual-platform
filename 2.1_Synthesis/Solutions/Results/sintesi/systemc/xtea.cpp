// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "xtea.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic xtea::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic xtea::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<8> xtea::ap_ST_fsm_state1 = "1";
const sc_lv<8> xtea::ap_ST_fsm_state2 = "10";
const sc_lv<8> xtea::ap_ST_fsm_state3 = "100";
const sc_lv<8> xtea::ap_ST_fsm_state4 = "1000";
const sc_lv<8> xtea::ap_ST_fsm_state5 = "10000";
const sc_lv<8> xtea::ap_ST_fsm_state6 = "100000";
const sc_lv<8> xtea::ap_ST_fsm_state7 = "1000000";
const sc_lv<8> xtea::ap_ST_fsm_state8 = "10000000";
const sc_lv<32> xtea::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> xtea::ap_const_lv32_1 = "1";
const sc_lv<1> xtea::ap_const_lv1_0 = "0";
const sc_lv<32> xtea::ap_const_lv32_2 = "10";
const sc_lv<32> xtea::ap_const_lv32_3 = "11";
const sc_lv<32> xtea::ap_const_lv32_4 = "100";
const sc_lv<32> xtea::ap_const_lv32_5 = "101";
const sc_lv<32> xtea::ap_const_lv32_6 = "110";
const sc_lv<37> xtea::ap_const_lv37_0 = "0000000000000000000000000000000000000";
const sc_lv<6> xtea::ap_const_lv6_0 = "000000";
const sc_lv<37> xtea::ap_const_lv37_13C6EF3720 = "1001111000110111011110011011100100000";
const sc_lv<1> xtea::ap_const_lv1_1 = "1";
const sc_lv<32> xtea::ap_const_lv32_7 = "111";
const sc_lv<6> xtea::ap_const_lv6_20 = "100000";
const sc_lv<6> xtea::ap_const_lv6_1 = "1";
const sc_lv<2> xtea::ap_const_lv2_0 = "00";
const sc_lv<2> xtea::ap_const_lv2_1 = "1";
const sc_lv<2> xtea::ap_const_lv2_2 = "10";
const sc_lv<64> xtea::ap_const_lv64_4 = "100";
const sc_lv<32> xtea::ap_const_lv32_3F = "111111";
const sc_lv<13> xtea::ap_const_lv13_19B9 = "1100110111001";
const sc_lv<32> xtea::ap_const_lv32_B = "1011";
const sc_lv<32> xtea::ap_const_lv32_C = "1100";
const sc_lv<11> xtea::ap_const_lv11_0 = "00000000000";
const sc_lv<13> xtea::ap_const_lv13_0 = "0000000000000";
const sc_lv<13> xtea::ap_const_lv13_800 = "100000000000";
const sc_lv<13> xtea::ap_const_lv13_1000 = "1000000000000";
const sc_lv<37> xtea::ap_const_lv37_9E3779B9 = "10011110001101110111100110111001";
const sc_lv<2> xtea::ap_const_lv2_3 = "11";
const sc_lv<37> xtea::ap_const_lv37_1F61C88647 = "1111101100001110010001000011001000111";
const bool xtea::ap_const_boolean_1 = true;

xtea::xtea(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln30_1_fu_360_p2);
    sensitive << ( zext_ln19_fu_356_p1 );
    sensitive << ( select_ln23_2_fu_316_p3 );

    SC_METHOD(thread_add_ln30_fu_350_p2);
    sensitive << ( v1_0_reg_175 );
    sensitive << ( xor_ln30_fu_344_p2 );

    SC_METHOD(thread_add_ln32_1_fu_370_p2);
    sensitive << ( trunc_ln32_fu_366_p1 );

    SC_METHOD(thread_add_ln43_1_fu_502_p2);
    sensitive << ( select_ln36_2_reg_843 );
    sensitive << ( zext_ln32_fu_466_p1 );

    SC_METHOD(thread_add_ln43_fu_496_p2);
    sensitive << ( v0_fu_454_p2 );
    sensitive << ( xor_ln43_fu_490_p2 );

    SC_METHOD(thread_add_ln64_1_fu_639_p2);
    sensitive << ( zext_ln52_fu_635_p1 );
    sensitive << ( select_ln57_2_fu_595_p3 );

    SC_METHOD(thread_add_ln64_fu_629_p2);
    sensitive << ( v0_1_reg_208 );
    sensitive << ( xor_ln64_fu_623_p2 );

    SC_METHOD(thread_add_ln66_1_fu_649_p2);
    sensitive << ( trunc_ln66_fu_645_p1 );

    SC_METHOD(thread_add_ln77_1_fu_763_p2);
    sensitive << ( select_ln70_2_reg_891 );
    sensitive << ( zext_ln66_fu_727_p1 );

    SC_METHOD(thread_add_ln77_fu_757_p2);
    sensitive << ( v1_fu_715_p2 );
    sensitive << ( xor_ln77_fu_751_p2 );

    SC_METHOD(thread_and_ln1_fu_386_p3);
    sensitive << ( tmp_4_fu_376_p4 );

    SC_METHOD(thread_and_ln23_fu_292_p2);
    sensitive << ( icmp_ln23_fu_274_p2 );
    sensitive << ( xor_ln21_fu_286_p2 );

    SC_METHOD(thread_and_ln36_fu_418_p2);
    sensitive << ( icmp_ln36_fu_400_p2 );
    sensitive << ( xor_ln34_fu_412_p2 );

    SC_METHOD(thread_and_ln57_fu_571_p2);
    sensitive << ( icmp_ln57_fu_553_p2 );
    sensitive << ( xor_ln55_fu_565_p2 );

    SC_METHOD(thread_and_ln70_fu_679_p2);
    sensitive << ( icmp_ln70_fu_661_p2 );
    sensitive << ( xor_ln68_fu_673_p2 );

    SC_METHOD(thread_and_ln_fu_539_p3);
    sensitive << ( tmp_fu_529_p4 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_i_2_fu_258_p2);
    sensitive << ( i_0_reg_154 );

    SC_METHOD(thread_i_fu_523_p2);
    sensitive << ( i_1_reg_197 );

    SC_METHOD(thread_icmp_ln19_fu_252_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_0_reg_154 );

    SC_METHOD(thread_icmp_ln21_fu_268_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln19_fu_252_p2 );
    sensitive << ( trunc_ln19_fu_264_p1 );

    SC_METHOD(thread_icmp_ln23_fu_274_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln19_fu_252_p2 );
    sensitive << ( trunc_ln19_fu_264_p1 );

    SC_METHOD(thread_icmp_ln25_fu_280_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln19_fu_252_p2 );
    sensitive << ( trunc_ln19_fu_264_p1 );

    SC_METHOD(thread_icmp_ln34_fu_394_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln19_fu_252_p2 );
    sensitive << ( and_ln1_fu_386_p3 );

    SC_METHOD(thread_icmp_ln36_fu_400_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln19_fu_252_p2 );
    sensitive << ( and_ln1_fu_386_p3 );

    SC_METHOD(thread_icmp_ln38_fu_406_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln19_fu_252_p2 );
    sensitive << ( and_ln1_fu_386_p3 );

    SC_METHOD(thread_icmp_ln52_fu_517_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( i_1_reg_197 );

    SC_METHOD(thread_icmp_ln55_fu_547_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln52_fu_517_p2 );
    sensitive << ( and_ln_fu_539_p3 );

    SC_METHOD(thread_icmp_ln57_fu_553_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln52_fu_517_p2 );
    sensitive << ( and_ln_fu_539_p3 );

    SC_METHOD(thread_icmp_ln59_fu_559_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln52_fu_517_p2 );
    sensitive << ( and_ln_fu_539_p3 );

    SC_METHOD(thread_icmp_ln68_fu_655_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln52_fu_517_p2 );
    sensitive << ( add_ln66_1_fu_649_p2 );

    SC_METHOD(thread_icmp_ln70_fu_661_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln52_fu_517_p2 );
    sensitive << ( add_ln66_1_fu_649_p2 );

    SC_METHOD(thread_icmp_ln72_fu_667_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln52_fu_517_p2 );
    sensitive << ( add_ln66_1_fu_649_p2 );

    SC_METHOD(thread_mode_read_read_fu_86_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( mode );

    SC_METHOD(thread_or_ln23_fu_304_p2);
    sensitive << ( icmp_ln21_fu_268_p2 );
    sensitive << ( and_ln23_fu_292_p2 );

    SC_METHOD(thread_or_ln36_fu_430_p2);
    sensitive << ( icmp_ln34_fu_394_p2 );
    sensitive << ( and_ln36_fu_418_p2 );

    SC_METHOD(thread_or_ln57_fu_583_p2);
    sensitive << ( icmp_ln55_fu_547_p2 );
    sensitive << ( and_ln57_fu_571_p2 );

    SC_METHOD(thread_or_ln70_fu_691_p2);
    sensitive << ( icmp_ln68_fu_655_p2 );
    sensitive << ( and_ln70_fu_679_p2 );

    SC_METHOD(thread_result0);
    sensitive << ( v0_3_reg_228 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_result0_ap_vld);
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_result1);
    sensitive << ( v1_3_reg_240 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_result1_ap_vld);
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_select_ln23_1_fu_310_p3);
    sensitive << ( key2 );
    sensitive << ( key3 );
    sensitive << ( icmp_ln25_fu_280_p2 );

    SC_METHOD(thread_select_ln23_2_fu_316_p3);
    sensitive << ( or_ln23_fu_304_p2 );
    sensitive << ( select_ln23_fu_298_p3 );
    sensitive << ( select_ln23_1_fu_310_p3 );

    SC_METHOD(thread_select_ln23_fu_298_p3);
    sensitive << ( key0 );
    sensitive << ( key1 );
    sensitive << ( and_ln23_fu_292_p2 );

    SC_METHOD(thread_select_ln36_1_fu_436_p3);
    sensitive << ( key2 );
    sensitive << ( key3 );
    sensitive << ( icmp_ln38_fu_406_p2 );

    SC_METHOD(thread_select_ln36_2_fu_442_p3);
    sensitive << ( or_ln36_fu_430_p2 );
    sensitive << ( select_ln36_fu_424_p3 );
    sensitive << ( select_ln36_1_fu_436_p3 );

    SC_METHOD(thread_select_ln36_fu_424_p3);
    sensitive << ( key0 );
    sensitive << ( key1 );
    sensitive << ( and_ln36_fu_418_p2 );

    SC_METHOD(thread_select_ln57_1_fu_589_p3);
    sensitive << ( key2 );
    sensitive << ( key3 );
    sensitive << ( icmp_ln59_fu_559_p2 );

    SC_METHOD(thread_select_ln57_2_fu_595_p3);
    sensitive << ( or_ln57_fu_583_p2 );
    sensitive << ( select_ln57_fu_577_p3 );
    sensitive << ( select_ln57_1_fu_589_p3 );

    SC_METHOD(thread_select_ln57_fu_577_p3);
    sensitive << ( key0 );
    sensitive << ( key1 );
    sensitive << ( and_ln57_fu_571_p2 );

    SC_METHOD(thread_select_ln70_1_fu_697_p3);
    sensitive << ( key2 );
    sensitive << ( key3 );
    sensitive << ( icmp_ln72_fu_667_p2 );

    SC_METHOD(thread_select_ln70_2_fu_703_p3);
    sensitive << ( or_ln70_fu_691_p2 );
    sensitive << ( select_ln70_fu_685_p3 );
    sensitive << ( select_ln70_1_fu_697_p3 );

    SC_METHOD(thread_select_ln70_fu_685_p3);
    sensitive << ( key0 );
    sensitive << ( key1 );
    sensitive << ( and_ln70_fu_679_p2 );

    SC_METHOD(thread_sext_ln30_fu_340_p1);
    sensitive << ( trunc_ln4_fu_330_p4 );

    SC_METHOD(thread_sext_ln43_fu_486_p1);
    sensitive << ( trunc_ln6_fu_476_p4 );

    SC_METHOD(thread_sext_ln64_fu_619_p1);
    sensitive << ( trunc_ln1_fu_609_p4 );

    SC_METHOD(thread_sext_ln77_fu_747_p1);
    sensitive << ( trunc_ln3_fu_737_p4 );

    SC_METHOD(thread_shl_ln30_fu_324_p2);
    sensitive << ( v1_0_reg_175 );

    SC_METHOD(thread_shl_ln43_fu_470_p2);
    sensitive << ( v0_fu_454_p2 );

    SC_METHOD(thread_shl_ln64_fu_603_p2);
    sensitive << ( v0_1_reg_208 );

    SC_METHOD(thread_shl_ln77_fu_731_p2);
    sensitive << ( v1_fu_715_p2 );

    SC_METHOD(thread_sum_2_fu_460_p2);
    sensitive << ( sum_0_reg_142 );

    SC_METHOD(thread_sum_fu_721_p2);
    sensitive << ( sum_1_reg_185 );

    SC_METHOD(thread_tmp_4_fu_376_p4);
    sensitive << ( add_ln32_1_fu_370_p2 );

    SC_METHOD(thread_tmp_fu_529_p4);
    sensitive << ( sum_1_reg_185 );

    SC_METHOD(thread_trunc_ln19_fu_264_p1);
    sensitive << ( sum_0_reg_142 );

    SC_METHOD(thread_trunc_ln1_fu_609_p4);
    sensitive << ( v0_1_reg_208 );

    SC_METHOD(thread_trunc_ln32_fu_366_p1);
    sensitive << ( sum_0_reg_142 );

    SC_METHOD(thread_trunc_ln3_fu_737_p4);
    sensitive << ( v1_fu_715_p2 );

    SC_METHOD(thread_trunc_ln4_fu_330_p4);
    sensitive << ( v1_0_reg_175 );

    SC_METHOD(thread_trunc_ln66_fu_645_p1);
    sensitive << ( sum_1_reg_185 );

    SC_METHOD(thread_trunc_ln6_fu_476_p4);
    sensitive << ( v0_fu_454_p2 );

    SC_METHOD(thread_v0_2_fu_772_p2);
    sensitive << ( v0_1_reg_208 );
    sensitive << ( xor_ln77_1_fu_768_p2 );

    SC_METHOD(thread_v0_fu_454_p2);
    sensitive << ( v0_0_reg_165 );
    sensitive << ( xor_ln30_1_fu_450_p2 );

    SC_METHOD(thread_v1_2_fu_511_p2);
    sensitive << ( v1_0_reg_175 );
    sensitive << ( xor_ln43_1_fu_507_p2 );

    SC_METHOD(thread_v1_fu_715_p2);
    sensitive << ( v1_1_reg_218 );
    sensitive << ( xor_ln64_1_fu_711_p2 );

    SC_METHOD(thread_xor_ln21_fu_286_p2);
    sensitive << ( icmp_ln21_fu_268_p2 );

    SC_METHOD(thread_xor_ln30_1_fu_450_p2);
    sensitive << ( add_ln30_reg_833 );
    sensitive << ( add_ln30_1_reg_838 );

    SC_METHOD(thread_xor_ln30_fu_344_p2);
    sensitive << ( shl_ln30_fu_324_p2 );
    sensitive << ( sext_ln30_fu_340_p1 );

    SC_METHOD(thread_xor_ln34_fu_412_p2);
    sensitive << ( icmp_ln34_fu_394_p2 );

    SC_METHOD(thread_xor_ln43_1_fu_507_p2);
    sensitive << ( add_ln43_reg_858 );
    sensitive << ( add_ln43_1_reg_863 );

    SC_METHOD(thread_xor_ln43_fu_490_p2);
    sensitive << ( shl_ln43_fu_470_p2 );
    sensitive << ( sext_ln43_fu_486_p1 );

    SC_METHOD(thread_xor_ln55_fu_565_p2);
    sensitive << ( icmp_ln55_fu_547_p2 );

    SC_METHOD(thread_xor_ln64_1_fu_711_p2);
    sensitive << ( add_ln64_reg_881 );
    sensitive << ( add_ln64_1_reg_886 );

    SC_METHOD(thread_xor_ln64_fu_623_p2);
    sensitive << ( shl_ln64_fu_603_p2 );
    sensitive << ( sext_ln64_fu_619_p1 );

    SC_METHOD(thread_xor_ln68_fu_673_p2);
    sensitive << ( icmp_ln68_fu_655_p2 );

    SC_METHOD(thread_xor_ln77_1_fu_768_p2);
    sensitive << ( add_ln77_reg_906 );
    sensitive << ( add_ln77_1_reg_911 );

    SC_METHOD(thread_xor_ln77_fu_751_p2);
    sensitive << ( shl_ln77_fu_731_p2 );
    sensitive << ( sext_ln77_fu_747_p1 );

    SC_METHOD(thread_zext_ln19_fu_356_p1);
    sensitive << ( sum_0_reg_142 );

    SC_METHOD(thread_zext_ln32_fu_466_p1);
    sensitive << ( sum_2_fu_460_p2 );

    SC_METHOD(thread_zext_ln52_fu_635_p1);
    sensitive << ( sum_1_reg_185 );

    SC_METHOD(thread_zext_ln66_fu_727_p1);
    sensitive << ( sum_fu_721_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln19_fu_252_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln52_fu_517_p2 );
    sensitive << ( mode_read_read_fu_86_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "00000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "xtea_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, word0, "(port)word0");
    sc_trace(mVcdFile, word1, "(port)word1");
    sc_trace(mVcdFile, key0, "(port)key0");
    sc_trace(mVcdFile, key1, "(port)key1");
    sc_trace(mVcdFile, key2, "(port)key2");
    sc_trace(mVcdFile, key3, "(port)key3");
    sc_trace(mVcdFile, mode, "(port)mode");
    sc_trace(mVcdFile, result0, "(port)result0");
    sc_trace(mVcdFile, result0_ap_vld, "(port)result0_ap_vld");
    sc_trace(mVcdFile, result1, "(port)result1");
    sc_trace(mVcdFile, result1_ap_vld, "(port)result1_ap_vld");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, i_2_fu_258_p2, "i_2_fu_258_p2");
    sc_trace(mVcdFile, i_2_reg_828, "i_2_reg_828");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, add_ln30_fu_350_p2, "add_ln30_fu_350_p2");
    sc_trace(mVcdFile, add_ln30_reg_833, "add_ln30_reg_833");
    sc_trace(mVcdFile, icmp_ln19_fu_252_p2, "icmp_ln19_fu_252_p2");
    sc_trace(mVcdFile, add_ln30_1_fu_360_p2, "add_ln30_1_fu_360_p2");
    sc_trace(mVcdFile, add_ln30_1_reg_838, "add_ln30_1_reg_838");
    sc_trace(mVcdFile, select_ln36_2_fu_442_p3, "select_ln36_2_fu_442_p3");
    sc_trace(mVcdFile, select_ln36_2_reg_843, "select_ln36_2_reg_843");
    sc_trace(mVcdFile, v0_fu_454_p2, "v0_fu_454_p2");
    sc_trace(mVcdFile, v0_reg_848, "v0_reg_848");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, sum_2_fu_460_p2, "sum_2_fu_460_p2");
    sc_trace(mVcdFile, sum_2_reg_853, "sum_2_reg_853");
    sc_trace(mVcdFile, add_ln43_fu_496_p2, "add_ln43_fu_496_p2");
    sc_trace(mVcdFile, add_ln43_reg_858, "add_ln43_reg_858");
    sc_trace(mVcdFile, add_ln43_1_fu_502_p2, "add_ln43_1_fu_502_p2");
    sc_trace(mVcdFile, add_ln43_1_reg_863, "add_ln43_1_reg_863");
    sc_trace(mVcdFile, v1_2_fu_511_p2, "v1_2_fu_511_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, i_fu_523_p2, "i_fu_523_p2");
    sc_trace(mVcdFile, i_reg_876, "i_reg_876");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, add_ln64_fu_629_p2, "add_ln64_fu_629_p2");
    sc_trace(mVcdFile, add_ln64_reg_881, "add_ln64_reg_881");
    sc_trace(mVcdFile, icmp_ln52_fu_517_p2, "icmp_ln52_fu_517_p2");
    sc_trace(mVcdFile, add_ln64_1_fu_639_p2, "add_ln64_1_fu_639_p2");
    sc_trace(mVcdFile, add_ln64_1_reg_886, "add_ln64_1_reg_886");
    sc_trace(mVcdFile, select_ln70_2_fu_703_p3, "select_ln70_2_fu_703_p3");
    sc_trace(mVcdFile, select_ln70_2_reg_891, "select_ln70_2_reg_891");
    sc_trace(mVcdFile, v1_fu_715_p2, "v1_fu_715_p2");
    sc_trace(mVcdFile, v1_reg_896, "v1_reg_896");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, sum_fu_721_p2, "sum_fu_721_p2");
    sc_trace(mVcdFile, sum_reg_901, "sum_reg_901");
    sc_trace(mVcdFile, add_ln77_fu_757_p2, "add_ln77_fu_757_p2");
    sc_trace(mVcdFile, add_ln77_reg_906, "add_ln77_reg_906");
    sc_trace(mVcdFile, add_ln77_1_fu_763_p2, "add_ln77_1_fu_763_p2");
    sc_trace(mVcdFile, add_ln77_1_reg_911, "add_ln77_1_reg_911");
    sc_trace(mVcdFile, v0_2_fu_772_p2, "v0_2_fu_772_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, sum_0_reg_142, "sum_0_reg_142");
    sc_trace(mVcdFile, mode_read_read_fu_86_p2, "mode_read_read_fu_86_p2");
    sc_trace(mVcdFile, i_0_reg_154, "i_0_reg_154");
    sc_trace(mVcdFile, v0_0_reg_165, "v0_0_reg_165");
    sc_trace(mVcdFile, v1_0_reg_175, "v1_0_reg_175");
    sc_trace(mVcdFile, sum_1_reg_185, "sum_1_reg_185");
    sc_trace(mVcdFile, i_1_reg_197, "i_1_reg_197");
    sc_trace(mVcdFile, v0_1_reg_208, "v0_1_reg_208");
    sc_trace(mVcdFile, v1_1_reg_218, "v1_1_reg_218");
    sc_trace(mVcdFile, v0_3_reg_228, "v0_3_reg_228");
    sc_trace(mVcdFile, v1_3_reg_240, "v1_3_reg_240");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, trunc_ln19_fu_264_p1, "trunc_ln19_fu_264_p1");
    sc_trace(mVcdFile, icmp_ln21_fu_268_p2, "icmp_ln21_fu_268_p2");
    sc_trace(mVcdFile, icmp_ln23_fu_274_p2, "icmp_ln23_fu_274_p2");
    sc_trace(mVcdFile, xor_ln21_fu_286_p2, "xor_ln21_fu_286_p2");
    sc_trace(mVcdFile, and_ln23_fu_292_p2, "and_ln23_fu_292_p2");
    sc_trace(mVcdFile, icmp_ln25_fu_280_p2, "icmp_ln25_fu_280_p2");
    sc_trace(mVcdFile, or_ln23_fu_304_p2, "or_ln23_fu_304_p2");
    sc_trace(mVcdFile, select_ln23_fu_298_p3, "select_ln23_fu_298_p3");
    sc_trace(mVcdFile, select_ln23_1_fu_310_p3, "select_ln23_1_fu_310_p3");
    sc_trace(mVcdFile, trunc_ln4_fu_330_p4, "trunc_ln4_fu_330_p4");
    sc_trace(mVcdFile, shl_ln30_fu_324_p2, "shl_ln30_fu_324_p2");
    sc_trace(mVcdFile, sext_ln30_fu_340_p1, "sext_ln30_fu_340_p1");
    sc_trace(mVcdFile, xor_ln30_fu_344_p2, "xor_ln30_fu_344_p2");
    sc_trace(mVcdFile, zext_ln19_fu_356_p1, "zext_ln19_fu_356_p1");
    sc_trace(mVcdFile, select_ln23_2_fu_316_p3, "select_ln23_2_fu_316_p3");
    sc_trace(mVcdFile, trunc_ln32_fu_366_p1, "trunc_ln32_fu_366_p1");
    sc_trace(mVcdFile, add_ln32_1_fu_370_p2, "add_ln32_1_fu_370_p2");
    sc_trace(mVcdFile, tmp_4_fu_376_p4, "tmp_4_fu_376_p4");
    sc_trace(mVcdFile, and_ln1_fu_386_p3, "and_ln1_fu_386_p3");
    sc_trace(mVcdFile, icmp_ln34_fu_394_p2, "icmp_ln34_fu_394_p2");
    sc_trace(mVcdFile, icmp_ln36_fu_400_p2, "icmp_ln36_fu_400_p2");
    sc_trace(mVcdFile, xor_ln34_fu_412_p2, "xor_ln34_fu_412_p2");
    sc_trace(mVcdFile, and_ln36_fu_418_p2, "and_ln36_fu_418_p2");
    sc_trace(mVcdFile, icmp_ln38_fu_406_p2, "icmp_ln38_fu_406_p2");
    sc_trace(mVcdFile, or_ln36_fu_430_p2, "or_ln36_fu_430_p2");
    sc_trace(mVcdFile, select_ln36_fu_424_p3, "select_ln36_fu_424_p3");
    sc_trace(mVcdFile, select_ln36_1_fu_436_p3, "select_ln36_1_fu_436_p3");
    sc_trace(mVcdFile, xor_ln30_1_fu_450_p2, "xor_ln30_1_fu_450_p2");
    sc_trace(mVcdFile, trunc_ln6_fu_476_p4, "trunc_ln6_fu_476_p4");
    sc_trace(mVcdFile, shl_ln43_fu_470_p2, "shl_ln43_fu_470_p2");
    sc_trace(mVcdFile, sext_ln43_fu_486_p1, "sext_ln43_fu_486_p1");
    sc_trace(mVcdFile, xor_ln43_fu_490_p2, "xor_ln43_fu_490_p2");
    sc_trace(mVcdFile, zext_ln32_fu_466_p1, "zext_ln32_fu_466_p1");
    sc_trace(mVcdFile, xor_ln43_1_fu_507_p2, "xor_ln43_1_fu_507_p2");
    sc_trace(mVcdFile, tmp_fu_529_p4, "tmp_fu_529_p4");
    sc_trace(mVcdFile, and_ln_fu_539_p3, "and_ln_fu_539_p3");
    sc_trace(mVcdFile, icmp_ln55_fu_547_p2, "icmp_ln55_fu_547_p2");
    sc_trace(mVcdFile, icmp_ln57_fu_553_p2, "icmp_ln57_fu_553_p2");
    sc_trace(mVcdFile, xor_ln55_fu_565_p2, "xor_ln55_fu_565_p2");
    sc_trace(mVcdFile, and_ln57_fu_571_p2, "and_ln57_fu_571_p2");
    sc_trace(mVcdFile, icmp_ln59_fu_559_p2, "icmp_ln59_fu_559_p2");
    sc_trace(mVcdFile, or_ln57_fu_583_p2, "or_ln57_fu_583_p2");
    sc_trace(mVcdFile, select_ln57_fu_577_p3, "select_ln57_fu_577_p3");
    sc_trace(mVcdFile, select_ln57_1_fu_589_p3, "select_ln57_1_fu_589_p3");
    sc_trace(mVcdFile, trunc_ln1_fu_609_p4, "trunc_ln1_fu_609_p4");
    sc_trace(mVcdFile, shl_ln64_fu_603_p2, "shl_ln64_fu_603_p2");
    sc_trace(mVcdFile, sext_ln64_fu_619_p1, "sext_ln64_fu_619_p1");
    sc_trace(mVcdFile, xor_ln64_fu_623_p2, "xor_ln64_fu_623_p2");
    sc_trace(mVcdFile, zext_ln52_fu_635_p1, "zext_ln52_fu_635_p1");
    sc_trace(mVcdFile, select_ln57_2_fu_595_p3, "select_ln57_2_fu_595_p3");
    sc_trace(mVcdFile, trunc_ln66_fu_645_p1, "trunc_ln66_fu_645_p1");
    sc_trace(mVcdFile, add_ln66_1_fu_649_p2, "add_ln66_1_fu_649_p2");
    sc_trace(mVcdFile, icmp_ln68_fu_655_p2, "icmp_ln68_fu_655_p2");
    sc_trace(mVcdFile, icmp_ln70_fu_661_p2, "icmp_ln70_fu_661_p2");
    sc_trace(mVcdFile, xor_ln68_fu_673_p2, "xor_ln68_fu_673_p2");
    sc_trace(mVcdFile, and_ln70_fu_679_p2, "and_ln70_fu_679_p2");
    sc_trace(mVcdFile, icmp_ln72_fu_667_p2, "icmp_ln72_fu_667_p2");
    sc_trace(mVcdFile, or_ln70_fu_691_p2, "or_ln70_fu_691_p2");
    sc_trace(mVcdFile, select_ln70_fu_685_p3, "select_ln70_fu_685_p3");
    sc_trace(mVcdFile, select_ln70_1_fu_697_p3, "select_ln70_1_fu_697_p3");
    sc_trace(mVcdFile, xor_ln64_1_fu_711_p2, "xor_ln64_1_fu_711_p2");
    sc_trace(mVcdFile, trunc_ln3_fu_737_p4, "trunc_ln3_fu_737_p4");
    sc_trace(mVcdFile, shl_ln77_fu_731_p2, "shl_ln77_fu_731_p2");
    sc_trace(mVcdFile, sext_ln77_fu_747_p1, "sext_ln77_fu_747_p1");
    sc_trace(mVcdFile, xor_ln77_fu_751_p2, "xor_ln77_fu_751_p2");
    sc_trace(mVcdFile, zext_ln66_fu_727_p1, "zext_ln66_fu_727_p1");
    sc_trace(mVcdFile, xor_ln77_1_fu_768_p2, "xor_ln77_1_fu_768_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("xtea.hdltvin.dat");
    mHdltvoutHandle.open("xtea.hdltvout.dat");
}

xtea::~xtea() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
}

void xtea::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, mode_read_read_fu_86_p2.read()))) {
        i_0_reg_154 = ap_const_lv6_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        i_0_reg_154 = i_2_reg_828.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(mode_read_read_fu_86_p2.read(), ap_const_lv1_1))) {
        i_1_reg_197 = ap_const_lv6_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        i_1_reg_197 = i_reg_876.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, mode_read_read_fu_86_p2.read()))) {
        sum_0_reg_142 = ap_const_lv37_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        sum_0_reg_142 = sum_2_reg_853.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(mode_read_read_fu_86_p2.read(), ap_const_lv1_1))) {
        sum_1_reg_185 = ap_const_lv37_13C6EF3720;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        sum_1_reg_185 = sum_reg_901.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, mode_read_read_fu_86_p2.read()))) {
        v0_0_reg_165 = word0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        v0_0_reg_165 = v0_reg_848.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(mode_read_read_fu_86_p2.read(), ap_const_lv1_1))) {
        v0_1_reg_208 = word0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        v0_1_reg_208 = v0_2_fu_772_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln19_fu_252_p2.read(), ap_const_lv1_1))) {
        v0_3_reg_228 = v0_0_reg_165.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(icmp_ln52_fu_517_p2.read(), ap_const_lv1_1))) {
        v0_3_reg_228 = v0_1_reg_208.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, mode_read_read_fu_86_p2.read()))) {
        v1_0_reg_175 = word1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        v1_0_reg_175 = v1_2_fu_511_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(mode_read_read_fu_86_p2.read(), ap_const_lv1_1))) {
        v1_1_reg_218 = word1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        v1_1_reg_218 = v1_reg_896.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln19_fu_252_p2.read(), ap_const_lv1_1))) {
        v1_3_reg_240 = v1_0_reg_175.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(icmp_ln52_fu_517_p2.read(), ap_const_lv1_1))) {
        v1_3_reg_240 = v1_1_reg_218.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln19_fu_252_p2.read(), ap_const_lv1_0))) {
        add_ln30_1_reg_838 = add_ln30_1_fu_360_p2.read();
        add_ln30_reg_833 = add_ln30_fu_350_p2.read();
        select_ln36_2_reg_843 = select_ln36_2_fu_442_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        add_ln43_1_reg_863 = add_ln43_1_fu_502_p2.read();
        add_ln43_reg_858 = add_ln43_fu_496_p2.read();
        sum_2_reg_853 = sum_2_fu_460_p2.read();
        v0_reg_848 = v0_fu_454_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln52_fu_517_p2.read()))) {
        add_ln64_1_reg_886 = add_ln64_1_fu_639_p2.read();
        add_ln64_reg_881 = add_ln64_fu_629_p2.read();
        select_ln70_2_reg_891 = select_ln70_2_fu_703_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        add_ln77_1_reg_911 = add_ln77_1_fu_763_p2.read();
        add_ln77_reg_906 = add_ln77_fu_757_p2.read();
        sum_reg_901 = sum_fu_721_p2.read();
        v1_reg_896 = v1_fu_715_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_2_reg_828 = i_2_fu_258_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        i_reg_876 = i_fu_523_p2.read();
    }
}

void xtea::thread_add_ln30_1_fu_360_p2() {
    add_ln30_1_fu_360_p2 = (!zext_ln19_fu_356_p1.read().is_01() || !select_ln23_2_fu_316_p3.read().is_01())? sc_lv<64>(): (sc_biguint<64>(zext_ln19_fu_356_p1.read()) + sc_biguint<64>(select_ln23_2_fu_316_p3.read()));
}

void xtea::thread_add_ln30_fu_350_p2() {
    add_ln30_fu_350_p2 = (!v1_0_reg_175.read().is_01() || !xor_ln30_fu_344_p2.read().is_01())? sc_lv<64>(): (sc_biguint<64>(v1_0_reg_175.read()) + sc_biguint<64>(xor_ln30_fu_344_p2.read()));
}

void xtea::thread_add_ln32_1_fu_370_p2() {
    add_ln32_1_fu_370_p2 = (!ap_const_lv13_19B9.is_01() || !trunc_ln32_fu_366_p1.read().is_01())? sc_lv<13>(): (sc_bigint<13>(ap_const_lv13_19B9) + sc_biguint<13>(trunc_ln32_fu_366_p1.read()));
}

void xtea::thread_add_ln43_1_fu_502_p2() {
    add_ln43_1_fu_502_p2 = (!zext_ln32_fu_466_p1.read().is_01() || !select_ln36_2_reg_843.read().is_01())? sc_lv<64>(): (sc_biguint<64>(zext_ln32_fu_466_p1.read()) + sc_biguint<64>(select_ln36_2_reg_843.read()));
}

void xtea::thread_add_ln43_fu_496_p2() {
    add_ln43_fu_496_p2 = (!v0_fu_454_p2.read().is_01() || !xor_ln43_fu_490_p2.read().is_01())? sc_lv<64>(): (sc_biguint<64>(v0_fu_454_p2.read()) + sc_biguint<64>(xor_ln43_fu_490_p2.read()));
}

void xtea::thread_add_ln64_1_fu_639_p2() {
    add_ln64_1_fu_639_p2 = (!zext_ln52_fu_635_p1.read().is_01() || !select_ln57_2_fu_595_p3.read().is_01())? sc_lv<64>(): (sc_biguint<64>(zext_ln52_fu_635_p1.read()) + sc_biguint<64>(select_ln57_2_fu_595_p3.read()));
}

void xtea::thread_add_ln64_fu_629_p2() {
    add_ln64_fu_629_p2 = (!v0_1_reg_208.read().is_01() || !xor_ln64_fu_623_p2.read().is_01())? sc_lv<64>(): (sc_biguint<64>(v0_1_reg_208.read()) + sc_biguint<64>(xor_ln64_fu_623_p2.read()));
}

void xtea::thread_add_ln66_1_fu_649_p2() {
    add_ln66_1_fu_649_p2 = (!ap_const_lv2_3.is_01() || !trunc_ln66_fu_645_p1.read().is_01())? sc_lv<2>(): (sc_bigint<2>(ap_const_lv2_3) + sc_biguint<2>(trunc_ln66_fu_645_p1.read()));
}

void xtea::thread_add_ln77_1_fu_763_p2() {
    add_ln77_1_fu_763_p2 = (!zext_ln66_fu_727_p1.read().is_01() || !select_ln70_2_reg_891.read().is_01())? sc_lv<64>(): (sc_biguint<64>(zext_ln66_fu_727_p1.read()) + sc_biguint<64>(select_ln70_2_reg_891.read()));
}

void xtea::thread_add_ln77_fu_757_p2() {
    add_ln77_fu_757_p2 = (!v1_fu_715_p2.read().is_01() || !xor_ln77_fu_751_p2.read().is_01())? sc_lv<64>(): (sc_biguint<64>(v1_fu_715_p2.read()) + sc_biguint<64>(xor_ln77_fu_751_p2.read()));
}

void xtea::thread_and_ln1_fu_386_p3() {
    and_ln1_fu_386_p3 = esl_concat<2,11>(tmp_4_fu_376_p4.read(), ap_const_lv11_0);
}

void xtea::thread_and_ln23_fu_292_p2() {
    and_ln23_fu_292_p2 = (icmp_ln23_fu_274_p2.read() & xor_ln21_fu_286_p2.read());
}

void xtea::thread_and_ln36_fu_418_p2() {
    and_ln36_fu_418_p2 = (icmp_ln36_fu_400_p2.read() & xor_ln34_fu_412_p2.read());
}

void xtea::thread_and_ln57_fu_571_p2() {
    and_ln57_fu_571_p2 = (icmp_ln57_fu_553_p2.read() & xor_ln55_fu_565_p2.read());
}

void xtea::thread_and_ln70_fu_679_p2() {
    and_ln70_fu_679_p2 = (icmp_ln70_fu_661_p2.read() & xor_ln68_fu_673_p2.read());
}

void xtea::thread_and_ln_fu_539_p3() {
    and_ln_fu_539_p3 = esl_concat<2,11>(tmp_fu_529_p4.read(), ap_const_lv11_0);
}

void xtea::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void xtea::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void xtea::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void xtea::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void xtea::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void xtea::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void xtea::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void xtea::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void xtea::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void xtea::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void xtea::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void xtea::thread_i_2_fu_258_p2() {
    i_2_fu_258_p2 = (!i_0_reg_154.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(i_0_reg_154.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void xtea::thread_i_fu_523_p2() {
    i_fu_523_p2 = (!i_1_reg_197.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(i_1_reg_197.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void xtea::thread_icmp_ln19_fu_252_p2() {
    icmp_ln19_fu_252_p2 = (!i_0_reg_154.read().is_01() || !ap_const_lv6_20.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_154.read() == ap_const_lv6_20);
}

void xtea::thread_icmp_ln21_fu_268_p2() {
    icmp_ln21_fu_268_p2 = (!trunc_ln19_fu_264_p1.read().is_01() || !ap_const_lv2_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln19_fu_264_p1.read() == ap_const_lv2_0);
}

void xtea::thread_icmp_ln23_fu_274_p2() {
    icmp_ln23_fu_274_p2 = (!trunc_ln19_fu_264_p1.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln19_fu_264_p1.read() == ap_const_lv2_1);
}

void xtea::thread_icmp_ln25_fu_280_p2() {
    icmp_ln25_fu_280_p2 = (!trunc_ln19_fu_264_p1.read().is_01() || !ap_const_lv2_2.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln19_fu_264_p1.read() == ap_const_lv2_2);
}

void xtea::thread_icmp_ln34_fu_394_p2() {
    icmp_ln34_fu_394_p2 = (!and_ln1_fu_386_p3.read().is_01() || !ap_const_lv13_0.is_01())? sc_lv<1>(): sc_lv<1>(and_ln1_fu_386_p3.read() == ap_const_lv13_0);
}

void xtea::thread_icmp_ln36_fu_400_p2() {
    icmp_ln36_fu_400_p2 = (!and_ln1_fu_386_p3.read().is_01() || !ap_const_lv13_800.is_01())? sc_lv<1>(): sc_lv<1>(and_ln1_fu_386_p3.read() == ap_const_lv13_800);
}

void xtea::thread_icmp_ln38_fu_406_p2() {
    icmp_ln38_fu_406_p2 = (!and_ln1_fu_386_p3.read().is_01() || !ap_const_lv13_1000.is_01())? sc_lv<1>(): sc_lv<1>(and_ln1_fu_386_p3.read() == ap_const_lv13_1000);
}

void xtea::thread_icmp_ln52_fu_517_p2() {
    icmp_ln52_fu_517_p2 = (!i_1_reg_197.read().is_01() || !ap_const_lv6_20.is_01())? sc_lv<1>(): sc_lv<1>(i_1_reg_197.read() == ap_const_lv6_20);
}

void xtea::thread_icmp_ln55_fu_547_p2() {
    icmp_ln55_fu_547_p2 = (!and_ln_fu_539_p3.read().is_01() || !ap_const_lv13_0.is_01())? sc_lv<1>(): sc_lv<1>(and_ln_fu_539_p3.read() == ap_const_lv13_0);
}

void xtea::thread_icmp_ln57_fu_553_p2() {
    icmp_ln57_fu_553_p2 = (!and_ln_fu_539_p3.read().is_01() || !ap_const_lv13_800.is_01())? sc_lv<1>(): sc_lv<1>(and_ln_fu_539_p3.read() == ap_const_lv13_800);
}

void xtea::thread_icmp_ln59_fu_559_p2() {
    icmp_ln59_fu_559_p2 = (!and_ln_fu_539_p3.read().is_01() || !ap_const_lv13_1000.is_01())? sc_lv<1>(): sc_lv<1>(and_ln_fu_539_p3.read() == ap_const_lv13_1000);
}

void xtea::thread_icmp_ln68_fu_655_p2() {
    icmp_ln68_fu_655_p2 = (!add_ln66_1_fu_649_p2.read().is_01() || !ap_const_lv2_0.is_01())? sc_lv<1>(): sc_lv<1>(add_ln66_1_fu_649_p2.read() == ap_const_lv2_0);
}

void xtea::thread_icmp_ln70_fu_661_p2() {
    icmp_ln70_fu_661_p2 = (!add_ln66_1_fu_649_p2.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(add_ln66_1_fu_649_p2.read() == ap_const_lv2_1);
}

void xtea::thread_icmp_ln72_fu_667_p2() {
    icmp_ln72_fu_667_p2 = (!add_ln66_1_fu_649_p2.read().is_01() || !ap_const_lv2_2.is_01())? sc_lv<1>(): sc_lv<1>(add_ln66_1_fu_649_p2.read() == ap_const_lv2_2);
}

void xtea::thread_mode_read_read_fu_86_p2() {
    mode_read_read_fu_86_p2 =  (sc_lv<1>) (mode.read());
}

void xtea::thread_or_ln23_fu_304_p2() {
    or_ln23_fu_304_p2 = (and_ln23_fu_292_p2.read() | icmp_ln21_fu_268_p2.read());
}

void xtea::thread_or_ln36_fu_430_p2() {
    or_ln36_fu_430_p2 = (and_ln36_fu_418_p2.read() | icmp_ln34_fu_394_p2.read());
}

void xtea::thread_or_ln57_fu_583_p2() {
    or_ln57_fu_583_p2 = (and_ln57_fu_571_p2.read() | icmp_ln55_fu_547_p2.read());
}

void xtea::thread_or_ln70_fu_691_p2() {
    or_ln70_fu_691_p2 = (and_ln70_fu_679_p2.read() | icmp_ln68_fu_655_p2.read());
}

void xtea::thread_result0() {
    result0 = v0_3_reg_228.read();
}

void xtea::thread_result0_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        result0_ap_vld = ap_const_logic_1;
    } else {
        result0_ap_vld = ap_const_logic_0;
    }
}

void xtea::thread_result1() {
    result1 = v1_3_reg_240.read();
}

void xtea::thread_result1_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        result1_ap_vld = ap_const_logic_1;
    } else {
        result1_ap_vld = ap_const_logic_0;
    }
}

void xtea::thread_select_ln23_1_fu_310_p3() {
    select_ln23_1_fu_310_p3 = (!icmp_ln25_fu_280_p2.read()[0].is_01())? sc_lv<64>(): ((icmp_ln25_fu_280_p2.read()[0].to_bool())? key2.read(): key3.read());
}

void xtea::thread_select_ln23_2_fu_316_p3() {
    select_ln23_2_fu_316_p3 = (!or_ln23_fu_304_p2.read()[0].is_01())? sc_lv<64>(): ((or_ln23_fu_304_p2.read()[0].to_bool())? select_ln23_fu_298_p3.read(): select_ln23_1_fu_310_p3.read());
}

void xtea::thread_select_ln23_fu_298_p3() {
    select_ln23_fu_298_p3 = (!and_ln23_fu_292_p2.read()[0].is_01())? sc_lv<64>(): ((and_ln23_fu_292_p2.read()[0].to_bool())? key1.read(): key0.read());
}

void xtea::thread_select_ln36_1_fu_436_p3() {
    select_ln36_1_fu_436_p3 = (!icmp_ln38_fu_406_p2.read()[0].is_01())? sc_lv<64>(): ((icmp_ln38_fu_406_p2.read()[0].to_bool())? key2.read(): key3.read());
}

void xtea::thread_select_ln36_2_fu_442_p3() {
    select_ln36_2_fu_442_p3 = (!or_ln36_fu_430_p2.read()[0].is_01())? sc_lv<64>(): ((or_ln36_fu_430_p2.read()[0].to_bool())? select_ln36_fu_424_p3.read(): select_ln36_1_fu_436_p3.read());
}

void xtea::thread_select_ln36_fu_424_p3() {
    select_ln36_fu_424_p3 = (!and_ln36_fu_418_p2.read()[0].is_01())? sc_lv<64>(): ((and_ln36_fu_418_p2.read()[0].to_bool())? key1.read(): key0.read());
}

void xtea::thread_select_ln57_1_fu_589_p3() {
    select_ln57_1_fu_589_p3 = (!icmp_ln59_fu_559_p2.read()[0].is_01())? sc_lv<64>(): ((icmp_ln59_fu_559_p2.read()[0].to_bool())? key2.read(): key3.read());
}

void xtea::thread_select_ln57_2_fu_595_p3() {
    select_ln57_2_fu_595_p3 = (!or_ln57_fu_583_p2.read()[0].is_01())? sc_lv<64>(): ((or_ln57_fu_583_p2.read()[0].to_bool())? select_ln57_fu_577_p3.read(): select_ln57_1_fu_589_p3.read());
}

void xtea::thread_select_ln57_fu_577_p3() {
    select_ln57_fu_577_p3 = (!and_ln57_fu_571_p2.read()[0].is_01())? sc_lv<64>(): ((and_ln57_fu_571_p2.read()[0].to_bool())? key1.read(): key0.read());
}

void xtea::thread_select_ln70_1_fu_697_p3() {
    select_ln70_1_fu_697_p3 = (!icmp_ln72_fu_667_p2.read()[0].is_01())? sc_lv<64>(): ((icmp_ln72_fu_667_p2.read()[0].to_bool())? key2.read(): key3.read());
}

void xtea::thread_select_ln70_2_fu_703_p3() {
    select_ln70_2_fu_703_p3 = (!or_ln70_fu_691_p2.read()[0].is_01())? sc_lv<64>(): ((or_ln70_fu_691_p2.read()[0].to_bool())? select_ln70_fu_685_p3.read(): select_ln70_1_fu_697_p3.read());
}

void xtea::thread_select_ln70_fu_685_p3() {
    select_ln70_fu_685_p3 = (!and_ln70_fu_679_p2.read()[0].is_01())? sc_lv<64>(): ((and_ln70_fu_679_p2.read()[0].to_bool())? key1.read(): key0.read());
}

void xtea::thread_sext_ln30_fu_340_p1() {
    sext_ln30_fu_340_p1 = esl_sext<64,59>(trunc_ln4_fu_330_p4.read());
}

void xtea::thread_sext_ln43_fu_486_p1() {
    sext_ln43_fu_486_p1 = esl_sext<64,59>(trunc_ln6_fu_476_p4.read());
}

void xtea::thread_sext_ln64_fu_619_p1() {
    sext_ln64_fu_619_p1 = esl_sext<64,59>(trunc_ln1_fu_609_p4.read());
}

void xtea::thread_sext_ln77_fu_747_p1() {
    sext_ln77_fu_747_p1 = esl_sext<64,59>(trunc_ln3_fu_737_p4.read());
}

void xtea::thread_shl_ln30_fu_324_p2() {
    shl_ln30_fu_324_p2 = (!ap_const_lv64_4.is_01())? sc_lv<64>(): v1_0_reg_175.read() << (unsigned short)ap_const_lv64_4.to_uint();
}

void xtea::thread_shl_ln43_fu_470_p2() {
    shl_ln43_fu_470_p2 = (!ap_const_lv64_4.is_01())? sc_lv<64>(): v0_fu_454_p2.read() << (unsigned short)ap_const_lv64_4.to_uint();
}

void xtea::thread_shl_ln64_fu_603_p2() {
    shl_ln64_fu_603_p2 = (!ap_const_lv64_4.is_01())? sc_lv<64>(): v0_1_reg_208.read() << (unsigned short)ap_const_lv64_4.to_uint();
}

void xtea::thread_shl_ln77_fu_731_p2() {
    shl_ln77_fu_731_p2 = (!ap_const_lv64_4.is_01())? sc_lv<64>(): v1_fu_715_p2.read() << (unsigned short)ap_const_lv64_4.to_uint();
}

void xtea::thread_sum_2_fu_460_p2() {
    sum_2_fu_460_p2 = (!ap_const_lv37_9E3779B9.is_01() || !sum_0_reg_142.read().is_01())? sc_lv<37>(): (sc_biguint<37>(ap_const_lv37_9E3779B9) + sc_biguint<37>(sum_0_reg_142.read()));
}

void xtea::thread_sum_fu_721_p2() {
    sum_fu_721_p2 = (!ap_const_lv37_1F61C88647.is_01() || !sum_1_reg_185.read().is_01())? sc_lv<37>(): (sc_bigint<37>(ap_const_lv37_1F61C88647) + sc_biguint<37>(sum_1_reg_185.read()));
}

void xtea::thread_tmp_4_fu_376_p4() {
    tmp_4_fu_376_p4 = add_ln32_1_fu_370_p2.read().range(12, 11);
}

void xtea::thread_tmp_fu_529_p4() {
    tmp_fu_529_p4 = sum_1_reg_185.read().range(12, 11);
}

void xtea::thread_trunc_ln19_fu_264_p1() {
    trunc_ln19_fu_264_p1 = sum_0_reg_142.read().range(2-1, 0);
}

void xtea::thread_trunc_ln1_fu_609_p4() {
    trunc_ln1_fu_609_p4 = v0_1_reg_208.read().range(63, 5);
}

void xtea::thread_trunc_ln32_fu_366_p1() {
    trunc_ln32_fu_366_p1 = sum_0_reg_142.read().range(13-1, 0);
}

void xtea::thread_trunc_ln3_fu_737_p4() {
    trunc_ln3_fu_737_p4 = v1_fu_715_p2.read().range(63, 5);
}

void xtea::thread_trunc_ln4_fu_330_p4() {
    trunc_ln4_fu_330_p4 = v1_0_reg_175.read().range(63, 5);
}

void xtea::thread_trunc_ln66_fu_645_p1() {
    trunc_ln66_fu_645_p1 = sum_1_reg_185.read().range(2-1, 0);
}

void xtea::thread_trunc_ln6_fu_476_p4() {
    trunc_ln6_fu_476_p4 = v0_fu_454_p2.read().range(63, 5);
}

void xtea::thread_v0_2_fu_772_p2() {
    v0_2_fu_772_p2 = (!v0_1_reg_208.read().is_01() || !xor_ln77_1_fu_768_p2.read().is_01())? sc_lv<64>(): (sc_biguint<64>(v0_1_reg_208.read()) - sc_biguint<64>(xor_ln77_1_fu_768_p2.read()));
}

void xtea::thread_v0_fu_454_p2() {
    v0_fu_454_p2 = (!xor_ln30_1_fu_450_p2.read().is_01() || !v0_0_reg_165.read().is_01())? sc_lv<64>(): (sc_biguint<64>(xor_ln30_1_fu_450_p2.read()) + sc_biguint<64>(v0_0_reg_165.read()));
}

void xtea::thread_v1_2_fu_511_p2() {
    v1_2_fu_511_p2 = (!xor_ln43_1_fu_507_p2.read().is_01() || !v1_0_reg_175.read().is_01())? sc_lv<64>(): (sc_biguint<64>(xor_ln43_1_fu_507_p2.read()) + sc_biguint<64>(v1_0_reg_175.read()));
}

void xtea::thread_v1_fu_715_p2() {
    v1_fu_715_p2 = (!v1_1_reg_218.read().is_01() || !xor_ln64_1_fu_711_p2.read().is_01())? sc_lv<64>(): (sc_biguint<64>(v1_1_reg_218.read()) - sc_biguint<64>(xor_ln64_1_fu_711_p2.read()));
}

void xtea::thread_xor_ln21_fu_286_p2() {
    xor_ln21_fu_286_p2 = (icmp_ln21_fu_268_p2.read() ^ ap_const_lv1_1);
}

void xtea::thread_xor_ln30_1_fu_450_p2() {
    xor_ln30_1_fu_450_p2 = (add_ln30_1_reg_838.read() ^ add_ln30_reg_833.read());
}

void xtea::thread_xor_ln30_fu_344_p2() {
    xor_ln30_fu_344_p2 = (shl_ln30_fu_324_p2.read() ^ sext_ln30_fu_340_p1.read());
}

void xtea::thread_xor_ln34_fu_412_p2() {
    xor_ln34_fu_412_p2 = (icmp_ln34_fu_394_p2.read() ^ ap_const_lv1_1);
}

void xtea::thread_xor_ln43_1_fu_507_p2() {
    xor_ln43_1_fu_507_p2 = (add_ln43_1_reg_863.read() ^ add_ln43_reg_858.read());
}

void xtea::thread_xor_ln43_fu_490_p2() {
    xor_ln43_fu_490_p2 = (shl_ln43_fu_470_p2.read() ^ sext_ln43_fu_486_p1.read());
}

void xtea::thread_xor_ln55_fu_565_p2() {
    xor_ln55_fu_565_p2 = (icmp_ln55_fu_547_p2.read() ^ ap_const_lv1_1);
}

void xtea::thread_xor_ln64_1_fu_711_p2() {
    xor_ln64_1_fu_711_p2 = (add_ln64_1_reg_886.read() ^ add_ln64_reg_881.read());
}

void xtea::thread_xor_ln64_fu_623_p2() {
    xor_ln64_fu_623_p2 = (shl_ln64_fu_603_p2.read() ^ sext_ln64_fu_619_p1.read());
}

void xtea::thread_xor_ln68_fu_673_p2() {
    xor_ln68_fu_673_p2 = (icmp_ln68_fu_655_p2.read() ^ ap_const_lv1_1);
}

void xtea::thread_xor_ln77_1_fu_768_p2() {
    xor_ln77_1_fu_768_p2 = (add_ln77_1_reg_911.read() ^ add_ln77_reg_906.read());
}

void xtea::thread_xor_ln77_fu_751_p2() {
    xor_ln77_fu_751_p2 = (shl_ln77_fu_731_p2.read() ^ sext_ln77_fu_747_p1.read());
}

void xtea::thread_zext_ln19_fu_356_p1() {
    zext_ln19_fu_356_p1 = esl_zext<64,37>(sum_0_reg_142.read());
}

void xtea::thread_zext_ln32_fu_466_p1() {
    zext_ln32_fu_466_p1 = esl_zext<64,37>(sum_2_fu_460_p2.read());
}

void xtea::thread_zext_ln52_fu_635_p1() {
    zext_ln52_fu_635_p1 = esl_zext<64,37>(sum_1_reg_185.read());
}

void xtea::thread_zext_ln66_fu_727_p1() {
    zext_ln66_fu_727_p1 = esl_zext<64,37>(sum_fu_721_p2.read());
}

void xtea::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(mode_read_read_fu_86_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_lv1_0, mode_read_read_fu_86_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln19_fu_252_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(icmp_ln52_fu_517_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm = "XXXXXXXX";
            break;
    }
}

void xtea::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"word0\" :  \"" << word0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"word1\" :  \"" << word1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"key0\" :  \"" << key0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"key1\" :  \"" << key1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"key2\" :  \"" << key2.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"key3\" :  \"" << key3.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"mode\" :  \"" << mode.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"result0\" :  \"" << result0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"result0_ap_vld\" :  \"" << result0_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"result1\" :  \"" << result1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"result1_ap_vld\" :  \"" << result1_ap_vld.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

